import { __rest } from "tslib";
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
export const START_HOVER_SVG_WIDTH_WITH_SHADOW = 94;
export const START_HOVER_SVG_HEIGHT_WITH_SHADOW = 52;
export const START_SVG_WIDTH = 82;
export const START_SVG_HEIGHT = 40;
export function MediatorSVG(props) {
    const { text: startText } = props, xyProps = __rest(props, ["text"]);
    return (_jsxs("svg", Object.assign({}, xyProps, { width: START_HOVER_SVG_WIDTH_WITH_SHADOW, height: START_HOVER_SVG_HEIGHT_WITH_SHADOW }, { children: [_jsxs("defs", { children: [_jsxs("filter", Object.assign({ id: "StartFilterDefault", x: "0", y: "0", width: "94", height: "52", filterUnits: "userSpaceOnUse" }, { children: [_jsx("feOffset", { dy: "1", in: "SourceAlpha" }), _jsx("feGaussianBlur", { stdDeviation: "2", result: "blur" }), _jsx("feFlood", { "flood-color": "#a9acb6", "flood-opacity": "0.388" }), _jsx("feComposite", { operator: "in", in2: "blur" }), _jsx("feComposite", { in: "SourceGraphic" })] })), _jsxs("linearGradient", Object.assign({ id: "linear-gradient", x1: "0.5", x2: "0.5", y2: "1", gradientUnits: "objectBoundingBox" }, { children: [_jsx("stop", { offset: "0", "stop-color": "#fcfcfd" }), _jsx("stop", { offset: "1", "stop-color": "#f7f8fb" })] }))] }), _jsxs("g", Object.assign({ id: "Start", className: "start-button" }, { children: [_jsxs("g", { children: [_jsx("g", Object.assign({ className: "start-button-rect", transform: "matrix(1, 0, 0, 1, -6, -5)", filter: "url(#StartFilterDefault)" }, { children: _jsx("rect", { id: "StartRectangle", width: START_SVG_WIDTH, height: START_SVG_HEIGHT, rx: "20", transform: "translate(6 5)", fill: "#dce1ff" }) })), _jsxs("g", Object.assign({ id: "Rectangle-4", className: "start-rect-fill" }, { children: [_jsx("rect", { width: "82", height: "40", rx: "20", stroke: "none", fill: "#dce1ff" }), _jsx("rect", { x: "0.5", y: "0.5", width: "81", height: "39", rx: "19.5", fill: "none" })] }))] }), _jsx("text", Object.assign({ id: "StartText", x: "42", y: "24", textAnchor: "middle", className: "start-text" }, { children: _jsx("tspan", Object.assign({ className: "start-text" }, { children: startText.length > 9 ? `${startText.substring(0, 7)}...` : startText })) }))] }))] })));
}
//# sourceMappingURL=MediatorSVG.js.map
